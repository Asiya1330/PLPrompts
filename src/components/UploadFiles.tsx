import React, { useEffect, useState } from 'react';
import uploadHelperFunctions from '../supabase/Images'
import UploadImageContainer from './UploadImageContainer';
const env = process.env.NEXT_PUBLIC_ENV
const org = process.env.NEXT_PUBLIC_ORG
const bucketUrl = process.env.NEXT_PUBLIC_BASE_BUCKET_URL

export default function UploadFiles({ userId, setFileUrls }: any) {
    const [files, setFiles] = useState<{
        url: string,
        prefix: string,
        name: string,
        path: string
    }[]>([]);

    useEffect(() => {
        const urls = files.map((file) => file.url);
        setFileUrls(urls);
    }, [files])

    const updateFiles = (path) => {
        // promptbase-dev-43637766-77a9-4cc3-8f4e-f8d1970e6601/1680293661240-avatar-gpt1.png
        const fileUrl = `${bucketUrl}/${path}`;
        const prefix = path.split('/')[1].split('-')[0];
        console.log(prefix);
        const name = path.split('/')[1];
        const file = {
            prefix: prefix,
            name: name,
            url: fileUrl,
            path
        }
        const updatedFiles = [...files, file];
        setFiles(updatedFiles);
    }

    const updateFilesAfterDeletion = (path) => {
        const updatedFiles = files.filter((item) => item.path != path);
        setFiles(updatedFiles)
    }

    const addFiles = async (e) => {
        const file = e.target.files[0];
        const { path } = await uploadHelperFunctions.uploadImageToFolder(file, userId);
        updateFiles(path);
    }
    return (
        <div className="upload-section w-full flex flex-col gap-y-2">
            <label>*Upload 5 to 9 example images generated by this prompt (no collages or edits)</label>
            <label className="italic text-gray-400">
                {`Only upload your images generated by Midjourney.`}
                <br />
                {`Prompts with more example images usually get more sales.`}
            </label>
            <div className="upload-images gap-2" style={{
                display: "flex",
                "flexDirection": "row",
                "alignItems": "center",
                "flexWrap": "wrap"
            }}>
                {files && files.map((file) => {
                    console.log(file, ';ncdj');

                    return <UploadImageContainer file={file} handleDelete={updateFilesAfterDeletion} />
                })

                }

                <label htmlFor="fileInput">
                    <span style={{
                        "fontSize": "24px",
                        "lineHeight": "0.5",
                        width: '100px',
                        height: '100px',
                        border: '1px solid',
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        color: 'white',
                        cursor: 'pointer',
                        margin: '20px 0'
                    }} >&#43;</span>
                </label>
                <input type="file" name="" id="fileInput" hidden onChange={addFiles} />
            </div>
        </div >
    )
}


