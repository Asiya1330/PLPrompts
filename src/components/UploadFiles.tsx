import React, { useEffect, useState } from 'react';
import UploadImageContainer from './UploadImageContainer';

export default function UploadFiles({ userId, setFileUrls, setAllFiles, allFiles }: any) {
    const [files, setFiles] = useState<{
        url: string,
        prefix: string,
        name: string,
        path: string
    }[]>([]);

    useEffect(() => {
        const urls = files.map((file) => file.url);
        setFileUrls(urls);
    }, [files])


    const updateFilesAfterDeletion = (name: any) => {
        const updatedAllFiles = allFiles.filter((file: any) => file.name !== name)
        setAllFiles(updatedAllFiles)
    }

    const addFiles = async (e: any) => {
        const file = e.target.files[0];
        setFiles([...files, file]);
        setAllFiles([...allFiles, file])
        let formData = new FormData();
        formData.append('file', file);
        formData.append('userId', userId);
    }
    return (
        <div className="upload-section w-full flex flex-col gap-y-2">
            <label>*Upload 5 to 9 example images generated by this prompt (no collages or edits)</label>
            <label className="italic text-gray-400">
                {`Only upload your images generated by Midjourney.`}
                <br />
                {`Prompts with more example images usually get more sales.`}
            </label>
            <div className="upload-images gap-2" style={{
                display: "flex",
                "flexDirection": "row",
                "alignItems": "center",
                "flexWrap": "wrap"
            }}>
                {allFiles && allFiles.map((file: any, idx: any) => {
                    console.log(file, ';ncdj');

                    return <UploadImageContainer key={idx} file={file} handleDelete={updateFilesAfterDeletion} />
                })

                }

                <label htmlFor="fileInput">
                    <span style={{
                        "fontSize": "24px",
                        "lineHeight": "0.5",
                        width: '100px',
                        height: '100px',
                        border: '1px solid',
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        color: 'white',
                        cursor: 'pointer',
                        margin: '20px 0'
                    }} >&#43;</span>
                </label>
                <input type="file" name="" id="fileInput" hidden onChange={addFiles} />
            </div>
        </div >
    )
}


