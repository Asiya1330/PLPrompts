// @ts-nocheck
import { useContext, useEffect, useState } from 'react'
import Head from 'next/head';
import Image from 'next/image';
import PromptCard from '@/components/PromptCard';
import { FEATURED_MAP } from '@/helpers/constants';
import { useRouter } from 'next/router';

import CustomSwiper from '@/components/CustomSwiper';
import Hero from '@/components/Hero';
import { PromptsContext } from '@/contexts/PromptsContext';
import Link from 'next/link';
import axios from 'axios';
import { stripeSellerAccIdUrl, updateUser } from '@/utils/apis';
import { UserContext } from '@/contexts/UserContext';
import { ResposnsivenessContext } from '@/contexts/responsiveWidthContext';

export default function Home() {
  const router = useRouter();
  const [currentTab, setCurrentTab] = useState('feature');
  const [midjourneyPrompts, setMidhourneyPrompts] = useState([]);
  const [gpt3Prompts, setGPT3Prompts] = useState([]);
  const [dallePrompts, setDallEPrompts] = useState([]);
  const [diffusionPrompts, setDiffusion] = useState([]);
  const { currentUser, setCurrentUser } = useContext(UserContext);
  const { removeSiteName } = useContext(ResposnsivenessContext)

  const { featuredPrompts, newestPrompts, prompts, monthlySortedPrompts, weeklySortedPrompts } = useContext(PromptsContext)

  useEffect(() => {
    const getId = async () => {
      console.log(router.query.code, 'olololol');
      if (router?.query?.code) {
        const { data } = await axios.get(stripeSellerAccIdUrl, { params: { code: router.query.code } })
        console.log(data.stripe_user_id);
        if (currentUser && currentUser._id && data.stripe_user_id) {
          const response = await axios.put(updateUser, {
            _id: currentUser._id,
            ownerStripeId: data.stripe_user_id
          })
          setCurrentUser({ ...currentUser, ownerStripeId: data.stripe_user_id });
          console.log({ ...currentUser, ownerStripeId: data.stripe_user_id });
          localStorage.setItem(
            process.env.NEXT_PUBLIC_LOCALHOST_KEY,
            JSON.stringify({ ...currentUser, ownerStripeId: data.stripe_user_id })
          );
          console.log(response, 'userUpdate');
        }
        router.push('/')
      }
    }
    getId()

  }, [router.query])

  useEffect(() => {
    const midhur = newestPrompts.filter((prompt) => prompt.type === 'Midjourney')
    setMidhourneyPrompts(midhur);
    const gpt = newestPrompts.filter((prompt) => prompt.type === 'GPT')
    setGPT3Prompts(gpt);

    const diffusion = newestPrompts.filter((prompt) => prompt.type === 'Stable Diffusion')
    setDiffusion(diffusion);

    const dalle = newestPrompts.filter((prompt) => prompt.type === 'DALL-E')
    setDallEPrompts(dalle);

  }, [newestPrompts])

  const handleCurentTab = (val) => setCurrentTab(val)

  return (
    <>
      <Head>
        <title>Prompts</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="container mx-auto mb-36 mt-32">
          <Hero />
        </div>

        <div className="container flex flex-col items-center mx-auto mb-36">
          <h3 className="mb-9 font-semibold">Featured In</h3>

          <div className="flex flex-wrap max-w-[1005px] gap-y-8 -mr-20">
            {FEATURED_MAP.map(({ title, image, width, height }, index) => (
              <Image key={index} className="mr-20 last:mr-0" src={image} alt={title} width={width} height={height} />
            ))}
          </div>
        </div>

        <div className="container flex flex-col items-center mx-auto mb-36">
          <div className="grid grid-cols-3 gap-x-5 px-28 pb-7 mb-16 border-b-[0.5px] border-b-white">
            <button className={`prompts-button ${currentTab === 'feature' ? 'active' : ''}`} onClick={() => handleCurentTab('feature')}>Featured Prompts</button>
            <button className={`${removeSiteName ? '' : 'text-xl'} prompts-button ${currentTab === 'trending' ? 'active' : ''}`} onClick={() => handleCurentTab('trending')}>Trending Prompts</button>
            <button className={`prompts-button ${currentTab === 'newest' ? 'active' : ''}`} onClick={() => handleCurentTab('newest')}>Newest Prompts</button>
          </div>
          {
            currentTab === 'feature' ?
              <div className="grid grid-cols-4 gap-x-6 gap-y-8 mb-16">
                {featuredPrompts.map(({ name, price, type, images }) => (
                  <PromptCard key={name} name={name} price={price} tag={type} image={images.length ? images[0] : ''} />
                ))}
              </div> :
              currentTab === 'trending' ?
                <div className="grid grid-cols-4 gap-x-6 gap-y-8 mb-16">
                  {prompts.map(({ name, price, type, images }) => (
                    <PromptCard key={name} name={name} price={price} tag={type} image={images.length ? images[0] : ''} />
                  ))}
                </div> :
                <div className="grid grid-cols-4 gap-x-6 gap-y-8 mb-16">
                  {newestPrompts.map(({ name, price, type, images }) => (
                    <PromptCard key={name} name={name} price={price} tag={type} image={images.length ? images[0] : ''} />
                  ))}
                </div>
          }

          <button className="browse-button" onClick={() => router.push('/marketplace')}>
            <Link className="browse-button" href={'/marketplace'}>
              Browse Marketplace
            </Link>
          </button>
        </div>

        <div className="flex flex-col items-center py-16 mb-24 bg-[#0B88D980]">
          <h2 className="mb-5">What is Prompts?</h2>
          <div className="flex flex-col max-w-[743px] text-center gap-y-2.5">
            <p>Prompts are becoming a powerful new way of programming AI models like DALL·E, Midjourney & GPT-3.</p>
            <p>However, it&apos;s hard to find good quality prompts online.</p>
            <p>
              If you&apos;re good at prompt engineering, there&apos;s also no clear way to make a living from your
              skills.
            </p>
            <p>
              PromptBase is a marketplace for buying and selling quality prompts that produce the best results, and save
              you money on API costs.
            </p>
          </div>
        </div>

        <div className="container flex flex-col items-center mx-auto mb-36">
          <CustomSwiper title="Most Popular Prompts This Week" data={weeklySortedPrompts} />

          <CustomSwiper title="Most Popular Prompts This Month" data={monthlySortedPrompts} />

          <Link className="browse-button" href={'/marketplace'}>
            Browse Marketplace
          </Link>
        </div>

        <div className="blog">
          <Image src="/blogs/youtube.png" alt="youtube" width="555" height="330" />

          <div className='flex flex-col justify-center align-middle'>
            <h2>Earn from your Prompt Engineering skills</h2>

            <div className='flex justify-start flex-col gap-2'>
              <div>PromptBase is an early marketplace for DALL·E, Midjourney, Stable Diffusion & GPT-3 prompts.</div>
              <p>Sell your prompts on PromptBase and earn from your prompt crafting skills.</p>
              <p>Upload your prompt, connect with Stripe, and become a seller in just 2 minutes.</p>
            </div>

            <Link className="mt-2 browse-button w-1/3 align-middle justify-center flex" href={'/sell'}>
              Sell A Prompt</Link>
          </div>
        </div>

        <div className="container flex flex-col items-center mx-auto mb-36">
          <CustomSwiper title="Newest Midjourney Prompts" data={midjourneyPrompts} />

          <CustomSwiper title="Newest GPT-3 Prompts" data={gpt3Prompts} />

          <Link className="browse-button" href={'/marketplace'}>
            Browse Marketplace
          </Link>
        </div>

        <div className="blog flex-row-reverse">
          <Image src="/blogs/generate.png" alt="generate" width="555" height="330" />

          <div>
            <h2>Generate images directly in PromptBase</h2>

            <div>
              <p>Start prompt engineering instantly within PromptBase using Stable Diffusion.</p>
              <p>Craft prompts and sell them on the marketplace.</p>
              <p>Get 5 free generation credits every day.</p>
            </div>

            <Link className='browse-button w-1/3' href={'./generate'} > Generate Images</Link>
          </div>
        </div>

        <div className="container flex flex-col items-center mx-auto mb-36">
          <CustomSwiper title="Newest DALL·E Prompts" data={dallePrompts} />

          <CustomSwiper title="Newest Stable Diffusion Prompts" data={diffusionPrompts} />

          <Link className="browse-button" href={'/marketplace'}>
            Browse Marketplace
          </Link>
        </div>
      </main>
    </>
  );
}
